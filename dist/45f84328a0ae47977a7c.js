import"./style.css";import*as THREE from"three";import{OrbitControls}from"three/examples/jsm/controls/OrbitControls.js";import*as dat from"dat.gui";const gui=new dat.GUI;gui.hide();const canvas=document.querySelector("canvas.webgl"),scene=new THREE.Scene,parameters={count:301250,size:.6,radius:619.45,randomness:85.89,branches:4,elipticalness_x:3,elipticalness_z:7,insideColor:"#e38938",outsideColor:"#0065ff",randomness_power:.68,randomness_likelihood:.44};let particle_geometry=null,particle_material=null,particle_mesh=null;const generateGalaxy=()=>{null!==particle_mesh&&(particle_geometry.dispose(),particle_material.dispose(),scene.remove(particle_mesh));const e=new THREE.Color(parameters.insideColor),a=new THREE.Color(parameters.outsideColor);particle_geometry=new THREE.BufferGeometry;const r=new Float32Array(3*parameters.count),t=new Float32Array(3*parameters.count);for(let n=0;n<parameters.count;n++){const s=2*(Math.random()-.5)*Math.PI;let i=!1,o=0,m=0,l=0;for(;!i;){const e=2*(Math.random()-.5),a=2*(Math.random()-.5),r=2*(Math.random()-.5);Math.sqrt(e*e+a*a+r*r)>1?i=!1:(i=!0,o=e,m=a,l=r)}n<20&&console.log(o,m,l);const d=parameters.radius/parameters.branches*(n%parameters.branches),c=3*n;r[c+0]=d*Math.sin(s+Math.PI/parameters.elipticalness_x)+o*(parameters.randomness*(Math.random()<parameters.randomness_likelihood?1:parameters.randomness_power)),r[c+1]=l*(parameters.randomness*(Math.random()<parameters.randomness_likelihood?1:parameters.randomness_power)),r[c+2]=d*Math.cos(s+ +Math.PI/parameters.elipticalness_z)+m*(parameters.randomness*(Math.random()<parameters.randomness_likelihood?1:parameters.randomness_power));const p=e.clone();p.lerp(a,d/parameters.radius),t[c+0]=p.r,t[c+1]=p.g,t[c+2]=p.b}particle_geometry.setAttribute("position",new THREE.BufferAttribute(r,3)),particle_geometry.setAttribute("color",new THREE.BufferAttribute(t,3)),particle_material=new THREE.PointsMaterial({size:parameters.size,sizeAttenuation:!0,depthWrite:!1,blending:THREE.AdditiveBlending,vertexColors:!0}),particle_mesh=new THREE.Points(particle_geometry,particle_material),scene.add(particle_mesh)};generateGalaxy(),gui.add(parameters,"count").min(100).max(1e6).step(50).onFinishChange(generateGalaxy),gui.add(parameters,"size").min(.001).max(1).step(.001).onFinishChange(generateGalaxy),gui.add(parameters,"radius").min(10).max(1e3).step(.001).onFinishChange(generateGalaxy),gui.add(parameters,"randomness").min(10).max(200).step(.001).onFinishChange(generateGalaxy),gui.add(parameters,"randomness_power").min(.01).max(1).step(.01).onFinishChange(generateGalaxy),gui.add(parameters,"randomness_likelihood").min(.01).max(1).step(.01).onFinishChange(generateGalaxy),gui.add(parameters,"branches").min(2).max(10).step(1).onFinishChange(generateGalaxy),gui.add(parameters,"elipticalness_x").min(2).max(12).step(1).onFinishChange(generateGalaxy),gui.add(parameters,"elipticalness_z").min(2).max(12).step(1).onFinishChange(generateGalaxy),gui.addColor(parameters,"insideColor").onFinishChange(generateGalaxy),gui.addColor(parameters,"outsideColor").onFinishChange(generateGalaxy);const sizes={width:window.innerWidth,height:window.innerHeight};window.addEventListener("resize",(()=>{sizes.width=window.innerWidth,sizes.height=window.innerHeight,camera.aspect=sizes.width/sizes.height,camera.updateProjectionMatrix(),renderer.setSize(sizes.width,sizes.height),renderer.setPixelRatio(Math.min(window.devicePixelRatio,2))}));const camera=new THREE.PerspectiveCamera(75,sizes.width/sizes.height,.1,1e4);camera.position.x=300,camera.position.y=300,camera.position.z=300,scene.add(camera);const controls=new OrbitControls(camera,canvas);controls.enableDamping=!0;const renderer=new THREE.WebGLRenderer({canvas});renderer.setSize(sizes.width,sizes.height),renderer.setPixelRatio(Math.min(window.devicePixelRatio,2));const clock=new THREE.Clock;let time=clock.getElapsedTime();const tick=()=>{const e=clock.getElapsedTime(),a=time-e;time=e,controls.update(),particle_mesh.rotation.y+=.1*a,particle_mesh.rotation.x+=Math.sin(e)*a*.05,particle_mesh.rotation.z+=.05*a,renderer.render(scene,camera),window.requestAnimationFrame(tick)};tick();